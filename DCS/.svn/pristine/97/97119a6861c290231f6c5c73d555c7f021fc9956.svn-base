package com.cn.hsd.rm.notice.controller;

import com.alibaba.fastjson.JSON;
import com.cn.hsd.rm.factors.service.IBiRiskFactorsService;
import com.cn.hsd.rm.result.service.IBiResultDataService;
import com.cn.hsd.rm.util.DateUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * Created by IntelliJ IDEA 2016.
 * User: shingmoyeung.
 * Date: 2017/2/18.
 * Time: 17:57.
 * To change this template use File | Settings | File Templates.
 */
@Controller
@Scope(value = "prototype")
@RequestMapping(value = "/notice")
public class NoticeController {
    private Logger logger = LoggerFactory.getLogger(NoticeController.class);
    @Autowired
    private IBiResultDataService resultDataService;
    @Autowired
    private IBiRiskFactorsService service;

    /**
     * 跳转添加通知报文页面
     *
     * @return
     */
    @RequestMapping(value = "/redirectAddNoticeMessagePage.do")
    public String redirectAddNoticeMessagePage() {
        return "notice/notice";
    }
    /**
     * 添加通知报文
     *
     * @param model
     * @param noticeInfo 通知报文
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "/addNoticeMessage.do")
    public String addNoticeMessage(Model model, String noticeInfo) {
        String jsonString = null;
        try {
            logger.info("更新风险结果数据且风险计算开始");
            this.resultDataService.updateNoticeMessageRiskResultInfo();
            
            this.service.treeNode("G54947", DateUtil.getNowTime("yyyy-MM-dd"));
            logger.info("更新风险结果数据且风险计算结束");
            //JSON处理
            jsonString = JSON.toJSONString("添加通知报文成功");
            model.addAttribute("noticeInfo", noticeInfo);
        } catch (Exception e) {
            logger.error("Add notification message is abnormal: \r\n" + e);
        }
        return jsonString;
    }

    /**
     * 跳转添加天气报文页面
     *
     * @return
     */
    @RequestMapping(value = "/redirectAddWeatherMessagePage.do")
    public String redirectAddWeatherMessagePage() {
        return "notice/weather";
    }

    /**
     * 添加天气报文
     *
     * @param model
     * @param weatherInfo 天气报文
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "/addWeatherMessage.do")
    public String addWeatherMessage(Model model, String weatherInfo) {
        String jsonString = null;
        try {
            logger.info("更新风险结果数据且风险计算开始");
            this.resultDataService.updateRiskResultInfo();
            this.service.treeNode("G54948", DateUtil.getNowTime("yyyy-MM-dd"));
            this.service.treeNode("G54946", DateUtil.getNowTime("yyyy-MM-dd"));
            logger.info("更新风险结果数据且风险计算结束");
            //JSON处理
            jsonString = JSON.toJSONString("添加天气报文成功");
            model.addAttribute("weatherInfo", weatherInfo);
        } catch (Exception e) {
            logger.error("Add weather message is abnormal: \r\n" + e);
        }
        return jsonString;
    }
}
