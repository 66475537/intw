package com.cn.hsd.rm.formula.model;

import java.io.Serializable;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.util.StringUtils;

/**
 * Model class of 公式定义.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class BiFormulaDef implements Serializable {
	private static final Logger logger = LoggerFactory.getLogger(BiFormulaDef.class);
	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 公式主建. */
	private String formulaDefId;

	/** 公式名称. */
	private String formulaDefName;

	/** 取值表. */
	private String valueTable;

	/** 取值字段. */
	private String valueField;

	/** 取值定义名称. */
	private String valueName;

	/** 取记录表数. */
	private String getRowCount;

	/** 排序规则. */
	private String orderbys;

	/** 排序字段. */
	private String orderbyField;

	/** 说明. */
	private String remark;

	/** 创建时间. */
	private String createTime;

	/** 更新时间. */
	private String updateTime;

	/** 更新用户. */
	private String updateUser;
	
	/** 因素ID */
	private String riskId;
	
	/** sql */
	private String sql;

	/** 风险要素. */
	private BiRiskFactors biRiskFactors;


	/**
	 * Constructor.
	 */
	public BiFormulaDef() {
	}

	/**
	 * Set the 公式主建.
	 * 
	 * @param formulaDefId
	 *            公式主建
	 */
	public void setFormulaDefId(String formulaDefId) {
		this.formulaDefId = formulaDefId;
	}

	/**
	 * Get the 公式主建.
	 * 
	 * @return 公式主建
	 */
	public String getFormulaDefId() {
		return this.formulaDefId;
	}

	/**
	 * Set the 公式名称.
	 * 
	 * @param formulaDefName
	 *            公式名称
	 */
	public void setFormulaDefName(String formulaDefName) {
		this.formulaDefName = formulaDefName;
	}

	/**
	 * Get the 公式名称.
	 * 
	 * @return 公式名称
	 */
	public String getFormulaDefName() {
		return this.formulaDefName;
	}

	/**
	 * Set the 取值表.
	 * 
	 * @param valueTable
	 *            取值表
	 */
	public void setValueTable(String valueTable) {
		this.valueTable = valueTable;
	}

	/**
	 * Get the 取值表.
	 * 
	 * @return 取值表
	 */
	public String getValueTable() {
		return this.valueTable;
	}

	/**
	 * Set the 取值字段.
	 * 
	 * @param valueField
	 *            取值字段
	 */
	public void setValueField(String valueField) {
		this.valueField = valueField;
	}

	/**
	 * Get the 取值字段.
	 * 
	 * @return 取值字段
	 */
	public String getValueField() {
		return this.valueField;
	}

	/**
	 * Set the 取值定义名称.
	 * 
	 * @param valueName
	 *            取值定义名称
	 */
	public void setValueName(String valueName) {
		this.valueName = valueName;
	}

	/**
	 * Get the 取值定义名称.
	 * 
	 * @return 取值定义名称
	 */
	public String getValueName() {
		return this.valueName;
	}

	/**
	 * Set the 取记录表数.
	 * 
	 * @param getRowCount
	 *            取记录表数
	 */
	public void setGetRowCount(String getRowCount) {
		this.getRowCount = getRowCount;
	}

	/**
	 * Get the 取记录表数.
	 * 
	 * @return 取记录表数
	 */
	public String getGetRowCount() {
		return this.getRowCount;
	}

	/**
	 * Set the 排序规则.
	 * 
	 * @param orderbys
	 *            排序规则
	 */
	public void setOrderbys(String orderbys) {
		this.orderbys = orderbys;
	}
	
	
	/**
	 * 转换
	 */
	public void translateOrderby(){
	}

	/**
	 * Get the 排序规则.
	 * 
	 * @return 排序规则
	 */
	public String getOrderbys() {
		return this.orderbys;
	}

	/**
	 * Set the 排序字段.
	 * 
	 * @param orderbyField
	 *            排序字段
	 */
	public void setOrderbyField(String orderbyField) {
		this.orderbyField = orderbyField;
	}

	/**
	 * Get the 排序字段.
	 * 
	 * @return 排序字段
	 */
	public String getOrderbyField() {
		return this.orderbyField;
	}

	/**
	 * Set the 说明.
	 * 
	 * @param remark
	 *            说明
	 */
	public void setRemark(String remark) {
		this.remark = remark;
	}

	/**
	 * Get the 说明.
	 * 
	 * @return 说明
	 */
	public String getRemark() {
		return this.remark;
	}

	/**
	 * Set the 创建时间.
	 * 
	 * @param createTime
	 *            创建时间
	 */
	public void setCreateTime(String createTime) {
		this.createTime = createTime;
	}

	/**
	 * Get the 创建时间.
	 * 
	 * @return 创建时间
	 */
	public String getCreateTime() {
		return this.createTime;
	}

	/**
	 * Set the 更新时间.
	 * 
	 * @param updateTime
	 *            更新时间
	 */
	public void setUpdateTime(String updateTime) {
		this.updateTime = updateTime;
	}

	/**
	 * Get the 更新时间.
	 * 
	 * @return 更新时间
	 */
	public String getUpdateTime() {
		return this.updateTime;
	}

	/**
	 * Set the 更新用户.
	 * 
	 * @param updateUser
	 *            更新用户
	 */
	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	/**
	 * Get the 更新用户.
	 * 
	 * @return 更新用户
	 */
	public String getUpdateUser() {
		return this.updateUser;
	}

	/**
	 * Set the 风险要素.
	 * 
	 * @param biRiskFactors
	 *            风险要素
	 */
	public void setBiRiskFactors(BiRiskFactors biRiskFactors) {
		this.biRiskFactors = biRiskFactors;
	}

	/**
	 * Get the 风险要素.
	 * 
	 * @return 风险要素
	 */
	public BiRiskFactors getBiRiskFactors() {
		return this.biRiskFactors;
	}

	
	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((formulaDefId == null) ? 0 : formulaDefId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		BiFormulaDef other = (BiFormulaDef) obj;
		if (formulaDefId == null) {
			if (other.formulaDefId != null) {
				return false;
			}
		} else if (!formulaDefId.equals(other.formulaDefId)) {
			return false;
		}
		return true;
	}

	public String getRiskId() {
		return riskId;
	}

	public void setRiskId(String riskId) {
		this.riskId = riskId;
	}

	public String buildSQL(List<BiFormulaDefRule> bdrList,String fltNo,String date) {
		String tableName = this.getValueTable();
		//1.得到view的名称，构造出SQL，将指定航班指定日期的数据计算得到Map
		String viewName = Constans.getViewName(tableName);
		if(StringUtils.isEmpty(viewName)){
			logger.error("TableName:"+tableName+" getViewName is empty!");
			return null;
		}
		StringBuilder sqlSb = new StringBuilder("select ");
		sqlSb.append(getValueField()).append(" from ").append(viewName);
		if(bdrList.size()>0)
			sqlSb.append(" where FLT_NO='").append(fltNo).append("' and START_TIME='").append(date).append("' ");
		for (int j = 0; j < bdrList.size(); j++) {
			sqlSb.append(" and ").append(bdrList.get(j).getFront()).append(bdrList.get(j).getCondition())
			.append(bdrList.get(j).getBack());
		}
		
		if (!StringUtils.isEmpty(getOrderbys()) && !StringUtils.isEmpty(getOrderbyField())) {
			sqlSb.append(" order by ").append(getOrderbyField()).append(" ")
					.append(getOrderbys());
		}
		
		if (!StringUtils.isEmpty(getRowCount) && !StringUtils.isEmpty(getRowCount)) {
			sqlSb.append(" limit ").append(getRowCount);
		}
		sql = sqlSb.toString();
		return sql;
	}
	
	

	public String getSql() {
		return sql;
	}

	public void setSql(String sql) {
		this.sql = sql;
	}

}
